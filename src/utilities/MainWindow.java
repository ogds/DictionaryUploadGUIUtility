/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package utilities;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;
import com.mysql.jdbc.Statement;
import com.mysql.jdbc.jdbc2.optional.MysqlDataSource;
import java.io.BufferedReader;
import java.io.IOException;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;

/**
 *
 * @author Eduard Ragimov<SeveneduS@gmail.com>
 */
public final class MainWindow extends javax.swing.JFrame {

    private String sLog         = "";
    private String sPathToFile  = "";
    private String sLogin       = "";
    private String sPasswd      = "";

    Thread tUploadr;

    //MySQL
    MysqlDataSource dataSource;
    Connection myConnection;

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();

        dataSource = new MysqlDataSource();

        jComboBoxLanguage.setModel( new javax.swing.DefaultComboBoxModel(
                new String[]{
                    "English AU",
                    "English UK",
                    "English US",
                    "French",
                    "Deutch",
                    "Azeri",
                    "Russian",
                    "Ukrainian"
                }
            )
        );
        jProgressBarConnection.setValue(0);
        jProgressBarUpload.setValue(0);

        LockButtons();
    }

    private void Disconnect() throws SQLException {
        if (!myConnection.isClosed()) {
            myConnection.close();
        }
        
        LockButtons();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jPanelLogin = new javax.swing.JPanel();
        jButtonLogIn = new javax.swing.JButton();
        jLabelULogin = new javax.swing.JLabel();
        jLabelUPwd = new javax.swing.JLabel();
        jTextFieldLogin = new javax.swing.JTextField();
        jPasswordField = new javax.swing.JPasswordField();
        jProgressBarConnection = new javax.swing.JProgressBar();
        jLabelServerAddress = new javax.swing.JLabel();
        jLabelDatabaseName = new javax.swing.JLabel();
        jTextFieldServerAddress = new javax.swing.JTextField();
        jTextFieldDBName = new javax.swing.JTextField();
        jPanelTools = new javax.swing.JPanel();
        jButtonExit = new javax.swing.JButton();
        jButtonUpload = new javax.swing.JButton();
        jButtonBrowse = new javax.swing.JButton();
        jProgressBarUpload = new javax.swing.JProgressBar();
        jComboBoxLanguage = new javax.swing.JComboBox();
        jLabelLangSel = new javax.swing.JLabel();
        jLabelPathToFile = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPaneLog = new javax.swing.JScrollPane();
        jTextLogArea = new javax.swing.JTextArea();
        jLabelStringPathFile = new javax.swing.JLabel();

        jFileChooser1.setCurrentDirectory(new java.io.File("C:\\Documents"));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Dictionary upload tool v 1.0");
        setAlwaysOnTop(true);
        setLocation(new java.awt.Point(0, 0));
        setName("MainFrameWindow"); // NOI18N
        setResizable(false);

        jPanelLogin.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.lightGray, java.awt.Color.gray));
        jPanelLogin.setToolTipText("LogIn");
        jPanelLogin.setName("LogIn"); // NOI18N

        jButtonLogIn.setText("Log In");
        jButtonLogIn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonLogInMouseClicked(evt);
            }
        });

        jLabelULogin.setText("Login:");
        jLabelULogin.setToolTipText("");

        jLabelUPwd.setText("Password:");

        jTextFieldLogin.setColumns(12);
        jTextFieldLogin.setText("db_user");
        jTextFieldLogin.setName("loginLBL"); // NOI18N

        jPasswordField.setText("dbpassword");

        jLabelServerAddress.setText("Server Address:");

        jLabelDatabaseName.setText("Database Name:");

        jTextFieldServerAddress.setText("localhost");

        jTextFieldDBName.setText("db_name");

        javax.swing.GroupLayout jPanelLoginLayout = new javax.swing.GroupLayout(jPanelLogin);
        jPanelLogin.setLayout(jPanelLoginLayout);
        jPanelLoginLayout.setHorizontalGroup(
            jPanelLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLoginLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jProgressBarConnection, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonLogIn))
            .addGroup(jPanelLoginLayout.createSequentialGroup()
                .addGroup(jPanelLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelLoginLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabelULogin, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelLoginLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabelUPwd))
                    .addGroup(jPanelLoginLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTextFieldLogin, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE))
                    .addGroup(jPanelLoginLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPasswordField)))
                .addGap(18, 18, 18)
                .addGroup(jPanelLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelLoginLayout.createSequentialGroup()
                        .addGroup(jPanelLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabelDatabaseName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelServerAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jTextFieldDBName)
                    .addComponent(jTextFieldServerAddress, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(95, 95, 95))
        );
        jPanelLoginLayout.setVerticalGroup(
            jPanelLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLoginLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelLoginLayout.createSequentialGroup()
                        .addComponent(jLabelULogin)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldServerAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addComponent(jLabelUPwd))
                    .addGroup(jPanelLoginLayout.createSequentialGroup()
                        .addComponent(jLabelServerAddress)
                        .addGap(41, 41, 41)
                        .addComponent(jLabelDatabaseName)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldDBName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(jPanelLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonLogIn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jProgressBarConnection, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanelTools.setBorder(javax.swing.BorderFactory.createTitledBorder("Tools"));
        jPanelTools.setToolTipText("Tools");
        jPanelTools.setName("Tools"); // NOI18N

        jButtonExit.setText("Exit");
        jButtonExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonExitMouseClicked(evt);
            }
        });

        jButtonUpload.setText("Upload");
        jButtonUpload.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonUploadMouseClicked(evt);
            }
        });

        jButtonBrowse.setText("Browse");
        jButtonBrowse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonBrowseMouseClicked(evt);
            }
        });

        jComboBoxLanguage.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxLanguage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxLanguageActionPerformed(evt);
            }
        });

        jLabelLangSel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelLangSel.setText("Select Dictionary language:");

        jLabelPathToFile.setText("File path:");

        jTextLogArea.setColumns(20);
        jTextLogArea.setRows(5);
        jScrollPaneLog.setViewportView(jTextLogArea);

        jLabelStringPathFile.setText("no file was selected");
        jLabelStringPathFile.setFocusable(false);
        jLabelStringPathFile.setName(""); // NOI18N

        javax.swing.GroupLayout jPanelToolsLayout = new javax.swing.GroupLayout(jPanelTools);
        jPanelTools.setLayout(jPanelToolsLayout);
        jPanelToolsLayout.setHorizontalGroup(
            jPanelToolsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelToolsLayout.createSequentialGroup()
                .addGroup(jPanelToolsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jProgressBarUpload, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelToolsLayout.createSequentialGroup()
                        .addComponent(jLabelPathToFile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelStringPathFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelToolsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 1, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelToolsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelToolsLayout.createSequentialGroup()
                                .addComponent(jLabelLangSel, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBoxLanguage, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPaneLog))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelToolsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonBrowse, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonUpload, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonExit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanelToolsLayout.setVerticalGroup(
            jPanelToolsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelToolsLayout.createSequentialGroup()
                .addGroup(jPanelToolsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonUpload)
                    .addComponent(jProgressBarUpload, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelToolsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonBrowse)
                    .addGroup(jPanelToolsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabelPathToFile)
                        .addComponent(jLabelStringPathFile)))
                .addGap(5, 5, 5)
                .addGroup(jPanelToolsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxLanguage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelLangSel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelToolsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelToolsLayout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonExit))
                    .addGroup(jPanelToolsLayout.createSequentialGroup()
                        .addComponent(jScrollPaneLog, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanelTools, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanelLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanelTools, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonExitMouseClicked
        if(jButtonExit.isEnabled()){
            try {
                sLog += "Application Exit\n";
                Disconnect();
                tUploadr.interrupt();
            } catch (SQLException ex) {
                Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                AppendLog();
                System.exit(0);
            }
        }
    }//GEN-LAST:event_jButtonExitMouseClicked

    private void jButtonBrowseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonBrowseMouseClicked
        if(jButtonBrowse.isEnabled()){
            int returnVal = jFileChooser1.showOpenDialog(MainWindow.this);

            if (returnVal == JFileChooser.APPROVE_OPTION) {
                sPathToFile = jFileChooser1.getSelectedFile().toString();

                jLabelStringPathFile.setText(sPathToFile);

                sLog += sPathToFile + " was selected to upload\n";
            } else {
                sLog += "Open command cancelled by user.\n";
            }

            AppendLog();
        }
    }//GEN-LAST:event_jButtonBrowseMouseClicked

    class Parser implements Runnable {

        public Parser() {

        }

        @Override
        public void run() {
            LockButtons();
            int u = 0;
            int w = 0;

            jProgressBarUpload.setValue(u);
            jProgressBarUpload.setStringPainted(true);

            Charset charset = Charset.forName("UTF-8");
            ArrayList<String> wordList = new ArrayList();
            //Parsing file [OK]
            if (sPathToFile.length() > 3) {
                Path fPath = Paths.get(sPathToFile);
                try (BufferedReader reader = Files.newBufferedReader(fPath, charset)) {
                    String line = null;

                    while ((line = reader.readLine()) != null) {
                        wordList.add(line);
                        w++;
                    }

                    reader.close();
                } catch (IOException e) {
                    sLog += e + "\n";
                    AppendLog();
                }
            }

            int p = GetDictionaryProportion(w);
            //SQL Things
            try {
                java.sql.Statement stmt = myConnection.createStatement();

                String dName = null;

                switch (jComboBoxLanguage.getSelectedItem().toString()) {
                    case "English AU":
                        dName = "eng_au";
                        break;
                    case "English UK":
                        dName = "eng_uk";
                        break;
                    case "English US":
                        dName = "eng_us";
                        break;
                    case "French":
                        dName = "fra";
                        break;
                    case "Deutch":
                        dName = "deu";
                        break;
                    case "Azeri":
                        dName = "aze";
                        break;
                    case "Russian":
                        dName = "rus";
                        break;
                    case "Ukrainian":
                        dName = "ua";
                        break;
                    default:
                        break;
                }
                //Create Table if not exists
                String sCreateTabel = "create table if not exists dict_db_" + dName
                        + "(id int not null auto_increment,"
                        + "lang_word varchar(127) not null unique,"
                        + "lang_word_description TEXT(2500),"
                        + "primary key(id))ENGINE=MyISAM DEFAULT CHARSET=utf8;";

                try {
                    PreparedStatement ps = (PreparedStatement) myConnection.prepareStatement(sCreateTabel);
                    ps.executeUpdate();

                } catch (SQLException sexptn) {
                    sLog = sexptn + "\n";
                    AppendLog();
                }

                for (String word : wordList) {
                    java.sql.Statement wStmt = myConnection.createStatement();

                    String wToAdd = null;

                    String wQuery = "INSERT IGNORE INTO `dict_db_" + dName
                            + "` (lang_word) VALUES ('" + word + "');";
                    
                    if (word.toLowerCase().contains("'")) {
                        String[] wordParts = word.split("\'");
                        wToAdd = wordParts[0];
                        wToAdd += "\\\'";
                        if(wordParts.length > 1){
                            wToAdd += wordParts[1];
                        }

                        String wQueryU = "INSERT IGNORE INTO `dict_db_" + dName
                            + "` (lang_word) VALUES ('" + wToAdd + "');";
                        
                        Statement sInsert = (Statement) myConnection.createStatement();
                        sInsert.execute(wQueryU);
                    } else {
                        PreparedStatement psInsert = (PreparedStatement) myConnection.prepareStatement(wQuery);
                        psInsert.executeUpdate();
                    }
                    
                    sLog = "Adding word: " + word + " into dictionary\n";
                    AppendLog();

                    u++;
                    int v = ((u / w) * p)*100;
                    jProgressBarUpload.setValue(v);
                }

            } catch (SQLException ex) {
                Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                sLog += ex;
                AppendLog();
            }

            UnlockButtons();
        }
    }

    /**
     * Getting proportion for uploading progress bar
     *
     * @param wordDictionaryLength
     * @return
     */
    int GetDictionaryProportion(int wordDictionaryLength) {
        int length = 0;
        if (wordDictionaryLength > 0) {
            length = (int) Math.pow(10, (int) (Math.log10(wordDictionaryLength) + 1));
        }else {
            return 0;
        }

        return length;
    }

    /**
     * Lock buttons from user's interaction
     */
    void LockButtons() {
        jButtonUpload.setEnabled(false);
        jButtonBrowse.setEnabled(false);
        jButtonExit.setEnabled(false);
    }

    /**
     * Make buttons available to user again
     */
    void UnlockButtons() {
        jButtonUpload.setEnabled(true);
        jButtonBrowse.setEnabled(true);
        jButtonExit.setEnabled(true);
    }

    private void jButtonUploadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonUploadMouseClicked
        if(jButtonUpload.isEnabled()){
            Parser myRunnable = new Parser();
            tUploadr = new Thread(myRunnable);
            tUploadr.start();
        }
    }//GEN-LAST:event_jButtonUploadMouseClicked

    private void jComboBoxLanguageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxLanguageActionPerformed
        sLog += "The " + jComboBoxLanguage.getSelectedItem() + " was selected\n";
        AppendLog();
    }//GEN-LAST:event_jComboBoxLanguageActionPerformed

    private void jButtonLogInMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonLogInMouseClicked
        if(jButtonLogIn.isEnabled()){
            jButtonLogIn.setEnabled(false);

            String sAddress = jTextFieldServerAddress.getText();
            
            String sDBName  = jTextFieldDBName.getText();
            
            sLogin = jTextFieldLogin.getText();
            char[] pass = jPasswordField.getPassword();
            sPasswd = new String(pass);

            sLog += "User " + sLogin + "trying to authentificate ... \n";
            AppendLog();

            if (sLogin.length() > 1) {
                try {
                    ConnectToDatabase(sLogin, sPasswd, sAddress, sDBName);
                } catch (SQLException ex) {
                    Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                LockButtons();
                jButtonLogIn.setEnabled(true);
                sLog += "Please put in your login information\n";
                AppendLog();
            }
        }
    }//GEN-LAST:event_jButtonLogInMouseClicked

    private void AppendLog() {
        this.jTextLogArea.setText(sLog);
    }

    public void ConnectToDatabase(String username, String password, 
            String address, String dbName) throws SQLException {
        try {
            dataSource.setUser(         username );
            dataSource.setPassword(     password );
            dataSource.setServerName(   address  );
            dataSource.setDatabaseName( dbName   );

            myConnection = (Connection) dataSource.getConnection();
            
            jProgressBarConnection.setValue(100);
            jProgressBarConnection.setStringPainted(true);
            
            sLog += "User: " + username+" was successefuly loged into the DataBase Server";
            UnlockButtons();
        } catch (SQLException e) {
            sLog += e.toString() + "\n";
            jButtonLogIn.setEnabled(true);
        } finally {
            AppendLog();
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBrowse;
    private javax.swing.JButton jButtonExit;
    private javax.swing.JButton jButtonLogIn;
    private javax.swing.JButton jButtonUpload;
    private javax.swing.JComboBox jComboBoxLanguage;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabelDatabaseName;
    private javax.swing.JLabel jLabelLangSel;
    private javax.swing.JLabel jLabelPathToFile;
    private javax.swing.JLabel jLabelServerAddress;
    private javax.swing.JLabel jLabelStringPathFile;
    private javax.swing.JLabel jLabelULogin;
    private javax.swing.JLabel jLabelUPwd;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelLogin;
    private javax.swing.JPanel jPanelTools;
    private javax.swing.JPasswordField jPasswordField;
    private javax.swing.JProgressBar jProgressBarConnection;
    private javax.swing.JProgressBar jProgressBarUpload;
    private javax.swing.JScrollPane jScrollPaneLog;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextFieldDBName;
    private javax.swing.JTextField jTextFieldLogin;
    private javax.swing.JTextField jTextFieldServerAddress;
    private javax.swing.JTextArea jTextLogArea;
    // End of variables declaration//GEN-END:variables
}
